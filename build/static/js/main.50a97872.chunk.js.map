{"version":3,"sources":["Components/contactFunctions.js","Components/person.js","App.js","index.js"],"names":["baseUrl","deleteContact","id","axios","delete","updateContact","newContact","put","then","response","catch","error","console","log","request","message","Person","persons","setPersons","map","person","name","number","onClick","window","confirm","contactFunctions","filter","App","useState","newName","setNewName","newNumber","setNewNumber","useEffect","get","data","onSubmit","event","preventDefault","found","find","toString","toLowerCase","toBeUpdated","push","concat","post","value","onChange","target","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0KACMA,EAAU,eA4BD,OACbC,cApBF,SAAuBC,GACrBC,IAAMC,OAAN,UAAgBJ,EAAhB,YAA2BE,KAoB3BG,cAlBF,SAAuBC,GACrBH,IACGI,IADH,UACUP,EADV,YACqBM,EAAWJ,IAAMI,GACnCE,MAAK,SAACC,GACL,OAAOA,KAERC,OAAM,SAAUC,GACXA,EAAMF,SAERG,QAAQC,IAAIF,EAAMG,SAGlBF,QAAQC,IAAI,QAASF,EAAMI,c,OCHpBC,EArBA,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAQzB,OACE,8BACGD,EAAQE,KAAI,SAACC,GAAD,OACX,8BACGA,EAAOC,KADV,KACkBD,EAAOE,OACvB,wBAAQC,QAAS,kBAZHrB,EAYsBkB,EAAOlB,GAZzBmB,EAY6BD,EAAOC,UAXxDG,OAAOC,QAAP,0CAAkDJ,MACpDK,EAAiBzB,cAAcC,GAC/BgB,EAAWD,EAAQU,QAAO,SAACP,GAAD,OAAYA,EAAOlB,KAAOA,QAHnC,IAACA,EAAImB,GAYlB,sBAFMD,EAAOlB,UCPjBF,EAAU,eAiJD4B,EAhJH,WACV,MAA8BC,mBAAS,IAAvC,mBAAOZ,EAAP,KAAgBC,EAAhB,KACA,EAA8BW,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAKAC,qBAAU,WACR/B,IAAMgC,IAAInC,GAASQ,MAAK,SAACC,GACvBS,EAAWT,EAAS2B,WAErB,IAmGH,OACE,gCACE,2CAUA,uBAAMC,SApGS,SAACC,GAClBA,EAAMC,iBAEN,IAAMC,EAAQvB,EAAQwB,MACpB,SAACrB,GAAD,OAAYA,EAAOC,KAAKqB,WAAWC,gBAAkBb,EAAQa,iBAG/D,GAAIH,GACF,GACEhB,OAAOC,QAAP,UACKK,EADL,+DAGA,CACAU,EAAMlB,OAASU,EACMN,EAAiBrB,cAAcmC,GAApD,IACMI,EAAc3B,EAAQU,QAAO,SAACP,GAAD,OAAYA,EAAOlB,IAAMsC,EAAMtC,MAClE0C,EAAYC,KAAKL,GACjBtB,EAAW0B,QAsBR,CAEL,IAAMtC,EAAa,CACjBe,KAAMS,EACNR,OAAQU,GAGVd,EACED,EAAQ6B,OAAO,CACbzB,KAAMS,EACNR,OAAQU,KAGZ7B,IAAM4C,KAAN,UAAc/C,GAAWM,KAgDzB,UACE,gCACE,uCACQ,uBAAO0C,MAAOlB,EAASmB,SAhHT,SAACX,GAC7BP,EAAWO,EAAMY,OAAOF,aA6GpB,UAIS,uBAAOA,MAAOhB,EAAWiB,SA/GX,SAACX,GAC5BL,EAAaK,EAAMY,OAAOF,aAiHtB,gCACE,wBAAQG,KAAK,SAAb,iBAAmC,UAKvC,8BACE,cAAC,EAAD,CAAQlC,QAASA,EAASC,WAAYA,UC3I9CkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.50a97872.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/api/persons';\n// const url = 'http://localhost:3001/persons';\n// function handleId() {\n//   const myRnId = () => parseInt(Date.now() * Math.random());\n//   return myRnId();\n// }\n// function saveContact({ newContact }) {\n//   axios.post(`${url}`, newContact);\n// }\nfunction deleteContact(id) {\n  axios.delete(`${baseUrl}/${id}`);\n}\nfunction updateContact(newContact) {\n  axios\n    .put(`${baseUrl}/${newContact.id}`, newContact)\n    .then((response) => {\n      return response;\n    })\n    .catch(function (error) {\n      if (error.response) {\n        // Request made and server responded\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log('Error', error.message);\n      }\n    });\n}\nexport default {\n  deleteContact,\n  updateContact,\n};\n","import contactFunctions from '../Components/contactFunctions';\nconst Person = ({ persons, setPersons }) => {\n  const handleDelete = (id, name) => {\n    if (window.confirm(`Are you sure you want to delete ${name}`)) {\n      contactFunctions.deleteContact(id);\n      setPersons(persons.filter((person) => person.id !== id));\n    }\n  };\n\n  return (\n    <div>\n      {persons.map((person) => (\n        <p key={person.id}>\n          {person.name}- {person.number}\n          <button onClick={() => handleDelete(person.id, person.name)}>\n            delete\n          </button>\n        </p>\n      ))}\n    </div>\n  );\n};\nexport default Person;\n","import { useState, useEffect } from 'react';\nimport Person from './Components/person';\nimport contactFunctions from './Components/contactFunctions';\n// import Notification from './Components/notification';\nimport axios from 'axios';\nconst baseUrl = '/api/persons';\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  // const [searchName, setSearchName] = useState('');\n  // const [result, setResult] = useState(false);\n  // const [message, setMessage] = useState(null);\n  // const [ErrorMessageType, setErrorMessageType] = useState(null);\n  useEffect(() => {\n    axios.get(baseUrl).then((response) => {\n      setPersons(response.data);\n    });\n  }, []);\n\n  const handleContactAddition = (event) => {\n    setNewName(event.target.value);\n  };\n  const handleNumberAddition = (event) => {\n    setNewNumber(event.target.value);\n  };\n  // const handleSearchFunction = (event) => {\n  //   setSearchName(event.target.value);\n  // };\n  const addContact = (event) => {\n    event.preventDefault();\n\n    const found = persons.find(\n      (person) => person.name.toString().toLowerCase() === newName.toLowerCase()\n    );\n\n    if (found) {\n      if (\n        window.confirm(\n          `${newName} is already on the contacts list.Do you want to overwrite?`\n        )\n      ) {\n        found.number = newNumber;\n        const notAvailable = contactFunctions.updateContact(found);\n        const toBeUpdated = persons.filter((person) => person.id != found.id);\n        toBeUpdated.push(found);\n        setPersons(toBeUpdated);\n        //   persons.concat({\n        //     name: newName,\n        //     number: newNumber,\n        //   })\n        // );\n\n        //   if (notAvailable === 0) {\n        //     setMessage(\n        //       `Contact '${newName}' has already been removed from the contact list`\n        //     );\n        //     setErrorMessageType(true);\n        //   } else {\n        //     setMessage(`Contact '${newName}' is updated`);\n        //     setErrorMessageType(false);\n        //   }\n\n        //   setTimeout(() => {\n        //     setMessage(null);\n        //   }, 5000);\n        // }\n      }\n    } else {\n      // const idGen = contactFunctions.handleId();\n      const newContact = {\n        name: newName,\n        number: newNumber,\n      };\n\n      setPersons(\n        persons.concat({\n          name: newName,\n          number: newNumber,\n        })\n      );\n      axios.post(`${baseUrl}`, newContact);\n      // setMessage(`Contact '${newName}' is added to the contacts list`);\n      // setErrorMessageType(false);\n      // setTimeout(() => {\n      //   setMessage(null);\n      // }, 5000);\n    }\n  };\n  // const searchContact = (event) => {\n  //   event.preventDefault();\n  //   let resultName = '';\n  //   let resultNumber = 0;\n  //   for (let i = 0; i < persons.length; i++) {\n  //     if (\n  //       persons[i].name.toString().toLowerCase() === searchName.toLowerCase()\n  //     ) {\n  //       resultName = persons[i].name;\n  //       resultNumber = persons[i].number;\n  //     }\n  //   }\n\n  //   if (resultNumber !== 0) {\n  //     const idGen = contactFunctions.handleId();\n  //     const newContact = [\n  //       { name: resultName, number: resultNumber, id: idGen },\n  //     ];\n  //     setPersons(newContact);\n  //     setResult(true);\n  //   } else {\n  //     setMessage(`Contact '${searchName}' is not on the contacts list`);\n  //     setErrorMessageType(true);\n  //     setTimeout(() => {\n  //       setMessage(null);\n  //     }, 5000);\n  //   }\n  // };\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {/* <Notification message={message} errorMessageType={ErrorMessageType} /> */}\n      {/* <form onSubmit={searchContact}>\n    Filter shown with\n    <input value={searchName} onChange={handleSearchFunction} />\n    <div>\n      <button>Search</button>\n    </div>\n  // </form> */}\n\n      <form onSubmit={addContact}>\n        <div>\n          <p>\n            Name: <input value={newName} onChange={handleContactAddition} />\n          </p>\n          Phone: <input value={newNumber} onChange={handleNumberAddition} />\n        </div>\n\n        <div>\n          <button type=\"submit\">add</button>{' '}\n        </div>\n      </form>\n      {/* <h2>{result ? 'Search Results' : 'Numbers'}</h2>\n  ... */}\n      <div>\n        <Person persons={persons} setPersons={setPersons} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}